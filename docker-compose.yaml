version: '3.2'
services:
  api-db:
    image: ${IMAGE_REPO:-lagoon}/api-db
    volumes:
      - ./services/api-db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./services/api-db/rerun_initdb.sh:/rerun_initdb.sh
    ports:
      - '3366:3306'
  webhook-handler:
    image: ${IMAGE_REPO:-lagoon}/webhook-handler
    command: yarn run dev
    ports:
      - '7777:3000'
    volumes:
      - ./services/webhook-handler/src:/app/services/webhook-handler/src
      - ./node-packages:/app/node-packages:delegated
  backup-handler:
    image: ${IMAGE_REPO:-lagoon}/backup-handler
    restart: on-failure
    ports:
      - '7778:3000'
    depends_on:
      - broker
  broker:
    image: ${IMAGE_REPO:-lagoon}/broker-single
    ports:
      - '15672:15672'
      - '5672:5672'
  controllerhandler:
    image: ${IMAGE_REPO:-lagoon}/controllerhandler
    command: yarn run dev
    volumes:
      - ./services/controllerhandler/src:/app/services/controllerhandler/src
      - ./node-packages:/app/node-packages:delegated
  logs2rocketchat:
    image: ${IMAGE_REPO:-lagoon}/logs2rocketchat
    command: yarn run dev
    volumes:
      - ./services/logs2rocketchat/src:/app/services/logs2rocketchat/src
      - ./node-packages:/app/node-packages:delegated
  logs2slack:
    image: ${IMAGE_REPO:-lagoon}/logs2slack
    command: yarn run dev
    volumes:
      - ./services/logs2slack/src:/app/services/logs2slack/src
      - ./node-packages:/app/node-packages:delegated
  logs2webhook:
    image: ${IMAGE_REPO:-lagoon}/logs2webhook
    command: yarn run dev
    volumes:
      - ./services/logs2webhook/src:/app/services/logs2webhook/src
      - ./node-packages:/app/node-packages:delegated
  logs2s3:
    image: ${IMAGE_REPO:-lagoon}/logs2s3
    command: yarn run dev
    volumes:
      - ./services/logs2s3/src:/app/services/logs2s3/src
      - ./node-packages:/app/node-packages:delegated
  logs2microsoftteams:
    image: ${IMAGE_REPO:-lagoon}/logs2microsoftteams
    command: yarn run dev
    volumes:
      - ./services/logs2microsoftteams/src:/app/services/logs2microsoftteams/src
      - ./node-packages:/app/node-packages:delegated
  logs2email:
    image: ${IMAGE_REPO:-lagoon}/logs2email
    command: yarn run dev
    volumes:
      - ./services/logs2email/src:/app/services/logs2email/src
      - ./node-packages:/app/node-packages:delegated
    depends_on:
      - mailhog
  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025
    labels:
      lagoon.type: none
  webhooks2tasks:
    image: ${IMAGE_REPO:-lagoon}/webhooks2tasks
    command: yarn run dev
    volumes:
      - ./services/webhooks2tasks/src:/app/services/webhooks2tasks/src
      - ./node-packages:/app/node-packages:delegated
  api:
    image: ${IMAGE_REPO:-lagoon}/api
    command: ./node_modules/.bin/tsc-watch --build --incremental --onSuccess "node -r dotenv-extended/config dist/index"
    volumes:
      - ./services/api/src:/app/services/api/src
      - ./node-packages:/app/node-packages:delegated
      - /app/node-packages/commons/dist
    environment:
      - NODE_ENV=development
      - CI=${CI:-true}
      - REGISTRY=harbor.172.17.0.1.nip.io:18080 # Docker network bridge and forwarded port for harbor-nginx
    depends_on:
      - api-db
      - keycloak
    ports:
      - '3000:3000'
    # Uncomment for local new relic tracking
    # environment:
    #   - NEW_RELIC_LICENSE_KEY=
    #   - NEW_RELIC_APP_NAME=api-local
    labels:
      lagoon.type: custom
      lagoon.template: services/api/.lagoon.app.yml
      lagoon.image: amazeeiolagoon/api:v1-9-1
  ui:
    image: ${IMAGE_REPO:-lagoon}/ui
    command: yarn run dev
    volumes:
      - ./services/ui/src:/app/services/ui/src
      - ./services/ui/.env.defaults:/app/services/ui/.env.defaults
      - ./services/ui/.env.schema:/app/services/ui/.env.schema
      - ./services/ui/package.json:/app/services/ui/package.json
    environment:
      - NODE_ENV=development
    ports:
      - '8888:3003'
  actions-handler:
    image: ${IMAGE_REPO:-lagoon}/actions-handler
    restart: on-failure
    depends_on:
      - broker
  ssh:
    image: ${IMAGE_REPO:-lagoon}/ssh
    depends_on:
      - api
      - auth-server
    ports:
      - '2020:2020'
    # command:
    #   - "/usr/sbin/sshd"
    #   - "-e"
    #   - "-ddd"
    #   - "-f"
    #   - "/etc/ssh/sshd_config"
    user: '111111111'
    volumes:
      - ./services/ssh/home/command.sh:/home/command.sh
      - ./services/ssh/home/rsh.sh:/home/rsh.sh
  auth-server:
    image: ${IMAGE_REPO:-lagoon}/auth-server
    command: yarn run dev
    environment:
      - JWTISSUER=auth-server.dev
      - JWTAUDIENCE=api.dev
    volumes:
      - ./services/auth-server/src:/app/services/auth-server/src
    ports:
      - '3001:3000'
  keycloak:
    image: ${IMAGE_REPO:-lagoon}/keycloak
    user: '111111111'
    depends_on:
      - keycloak-db
    ports:
      - '8088:8080'
    volumes:
      - "./services/keycloak/profile.properties:/opt/jboss/keycloak/standalone/configuration/profile.properties"
      - "./services/keycloak/startup-scripts:/opt/jboss/startup-scripts"
  keycloak-db:
    image: ${IMAGE_REPO:-lagoon}/keycloak-db
    ports:
      - '3336:3306'
    labels:
      lagoon.type: custom
      lagoon.template: services/keycloak-db/.lagoon.app.yml
      lagoon.image: amazeeiolagoon/keycloak-db:v1-9-1
  tests-kubernetes:
    image: ${IMAGE_REPO:-lagoon}/tests
    environment:
      - CLUSTER_TYPE=control-k8s
      - WEBHOOK_HOST=webhook-handler
      - WEBHOOK_PORT=3000
      - WEBHOOK_PROTOCOL=http
      - ROUTE_SUFFIX_HTTP=172.17.0.1.nip.io
      - ROUTE_SUFFIX_HTTP_PORT=18080
      - ROUTE_SUFFIX_HTTPS=172.17.0.1.nip.io
      - ROUTE_SUFFIX_HTTPS_PORT=18443
      - WEBHOOK_REPO_PREFIX=ssh://git@172.17.0.1:2222/git/
      - GIT_REPO_PREFIX=git@local-git:/git/
      - SSH_PRIVATE_KEY=-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----
      - SSH_HOST=ssh
      - SSH_PORT=2020
      - API_HOST=api
      - API_PROTOCOL=http
      - API_PORT=3000
      - KEYCLOAK_AUTH_SERVER_CLIENT_SECRET=f605b150-7636-4447-abd3-70988786b330
      - DELETED_STATUS_CODE=404
    volumes:
      - ./tests:/ansible
  tests-openshift:
    image: ${IMAGE_REPO:-lagoon}/tests
    environment:
      - CLUSTER_TYPE=openshift
      - WEBHOOK_HOST=webhook-handler
      - WEBHOOK_PORT=3000
      - WEBHOOK_PROTOCOL=http
      - ROUTE_SUFFIX_HTTP=192.168.42.103.nip.io
      - ROUTE_SUFFIX_HTTP_PORT=80
      - ROUTE_SUFFIX_HTTPS=192.168.42.103.nip.io
      - ROUTE_SUFFIX_HTTPS_PORT=443
      - WEBHOOK_REPO_PREFIX=ssh://git@172.17.0.1:2222/git/
      - GIT_REPO_PREFIX=git@local-git:/git/
      - SSH_PRIVATE_KEY=-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----
      - SSH_HOST=ssh
      - SSH_PORT=2020
      - API_HOST=api
      - API_PROTOCOL=http
      - API_PORT=3000
      - KEYCLOAK_AUTH_SERVER_CLIENT_SECRET=f605b150-7636-4447-abd3-70988786b330
      - DELETED_STATUS_CODE=503
    volumes:
      - ./tests:/ansible
  local-git:
    image: ${IMAGE_REPO:-lagoon}/local-git
    environment:
      - GIT_AUTHORIZED_KEYS=ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDEZlms5XsiyWjmnnUyhpt93VgHypse9Bl8kNkmZJTiM3Ex/wZAfwogzqd2LrTEiIOWSH1HnQazR+Cc9oHCmMyNxRrLkS/MEl0yZ38Q+GDfn37h/llCIZNVoHlSgYkqD0MQrhfGL5AulDUKIle93dA6qdCUlnZZjDPiR0vEXR36xGuX7QYAhK30aD2SrrBruTtFGvj87IP/0OEOvUZe8dcU9G/pCoqrTzgKqJRpqs/s5xtkqLkTIyR/SzzplO21A+pCKNax6csDDq3snS8zfx6iM8MwVfh8nvBW9seax1zBvZjHAPSTsjzmZXm4z32/ujAn/RhIkZw3ZgRKrxzryttGnWJJ8OFyF31JTJgwWWuPdH53G15PC83ZbmEgSV3win51RZRVppN4uQUuaqZWG9wwk2a6P5aen1RLCSLpTkd2mAEk9PlgmJrf8vITkiU9pF9n68ENCoo556qSdxW2pxnjrzKVPSqmqO1Xg5K4LOX4/9N4n4qkLEOiqnzzJClhFif3O28RW86RPxERGdPT81UI0oDAcU5euQr8Emz+Hd+PY1115UIld3CIHib5PYL9Ee0bFUKiWpR/acSe1fHB64mCoHP7hjFepGsq7inkvg2651wUDKBshGltpNkMj6+aZedNc0/rKYyjl80nT8g8QECgOSRzpmYp0zli2HpFoLOiWw== ansible-testing
    ports:
      - '2222:22'
  remotedev:
    image: jhen0409/remotedev-server
    command: node main.js
    environment:
      - ADAPTER=
      - PORT=9090
    ports:
      - '9090:9090'
  local-api-data-watcher-pusher:
    depends_on:
      - api
    image: ${IMAGE_REPO:-lagoon}/local-api-data-watcher-pusher
    volumes:
      - ./local-dev/api-data:/api-data
      - ./local-dev/api-data-watcher-pusher:/home
  local-dbaas-provider:
    image: ${IMAGE_REPO:-lagoon}/local-dbaas-provider
    restart: always
    labels:
      lagoon.type: none
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
  local-mongodb-dbaas-provider:
    image: ${IMAGE_REPO:-lagoon}/local-mongodb-dbaas-provider
    restart: always
    labels:
      lagoon.type: none
    ports:
      - '27017:27017'
  local-minio:
    image: minio/minio
    entrypoint: sh
    command: -c 'mkdir -p /export/lagoon-files && mkdir -p /export/harbor-images && minio server /export --console-address ":9001" '
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
  local-registry:
    image: ${IMAGE_REPO:-lagoon}/local-registry
    ports:
      - '5000:5000'
  drush-alias:
    image: ${IMAGE_REPO:-lagoon}/drush-alias
    volumes:
      - ./services/drush-alias/web/aliases.drushrc.php.stub:/app/aliases.drushrc.php.stub
    ports:
      - '8087:8080'
    labels:
      version: '2'
  storage-calculator:
    image: ${IMAGE_REPO:-lagoon}/storage-calculator
    user: '111111111'
    volumes:
      - './services/storage-calculator/calculate-storage.sh:/calculate-storage.sh'
  api-redis:
    image: ${IMAGE_REPO:-lagoon}/api-redis
