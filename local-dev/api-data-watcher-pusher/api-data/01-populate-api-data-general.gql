mutation PopulateApi {
  #### Populate API with needed Objects to run the Credentialstests


  ### Groups
  CredentialtestGroup1: addGroup(
    input: {
      name: "credentialtest-group1"
    }
  ) {
    id
  }
  CredentialtestGroup2: addGroup(
    input: {
      name: "credentialtest-group2"
    }
  ) {
    id
  }
  CredentialtestGroup3: addGroup(
    input: {
      name: "credentialtest-group3"
      parentGroup: {
        name: "credentialtest-group2"
      }
    }
  ) {
    id
  }

  ### Users
  CredentialtestGroupAccessUser: addUser(
    input: {
      email: "credentialtestbothgroupaccess_user@example.com"
      comment: "credentialtestbothgroupaccess_user"
    }
  ) {
    id
  }
  CredentialtestSubgroupAccessUser: addUser(
    input: {
      email: "credentialtestsubgroupaccess_user@example.com"
      comment: "credentialtestsubgroupaccess_user"
    }
  ) {
    id
  }
  CiCustomerUserRsa: addUser(
    input: {
      email: "ci-customer-user-rsa@example.com"
      comment: "ci-customer-user-rsa"
    }
  ) {
    id
  }
  CiCustomerUserEd25519: addUser(
    input: {
      email: "ci-customer-user-ed25519@example.com"
      comment: "ci-customer-user-ed25519"
    }
  ) {
    id
  }

  ### SSH Keys:
  CredentialtestCustomerAccessSshKey: addSshKey(
    input: {
      id: 1
      name: "credentialtestbothgroupaccess"
      keyValue: "AAAAB3NzaC1yc2EAAAADAQABAAABAQDHDRxmCLzLCLdo8M8hK+v5Zr5p4q0XQYwCm9xxWWU8ItkyP4LB90fyh8qWFJRQTYrGNe4usDL5kPyHXhUevdZt75jcjWqlWypbtNY4nFfi+HQ9dnR/f7RRkoBWbha3j8mqZdRHXo9xrXMc82wXaN9a9dMbvEmZPkTpi75g+C0KXBrfjJjDR6Lvr7zWoB2nPMmgy1UGLl5dKxJOg7vHYCpAI582knd0nep3t3bRdlxe7l/CxMthZmoJxz6dfoFotDyBjivVYqEiybtjkNBQnRf2xYQ7m6837hu3EkSVKdgbonWASFMenpuFacDE2S2dVftwW3QjzIOtdQERGZuMsi0p"
      keyType: SSH_RSA
      user: {
        email: "credentialtestbothgroupaccess_user@example.com"
      }
    }
  ) {
    id
  }
  CredentialtestSubgroupAccessSshKey: addSshKey(
    input: {
      id: 2
      name: "credentialtestsubgroupaccess"
      keyValue: "AAAAB3NzaC1yc2EAAAADAQABAAABAQDSeDyxIwMWOjeAq7hF2qirbtoD33JZA2RxodsnnesrmWvrRlANn/fYZSR9zc8SMUMA6s6gR6eOLP+Nrz6bz9xIPFDhHpU7yJqWvb8EM2EPpgSppGmBIBDIPN+5YSxiX5fTuLn2dGHyIdgRvl1yXC09Pa16i/gweMIskP7nanFUfVcgUlTNm0nS6F+MzqklRRO7Tw1zOuleEnXohpzGpUJV5xgQmX4CoqiKYuyXssgBdwsrB9oYdGl8i7xi1w7Xlop6FhbaY/vQdy5f9xfoY2jiO7Big6FDeUGccpjL+xZ0MlKfiTl/OIHcsbshQZ1+D9eSmeaaQ8r9cujgTX2Y7umt"
      keyType: SSH_RSA
      user: {
        email: "credentialtestbothgroupaccess_user@example.com"
      }
    }
  ) {
    id
  }
  CiCustomerSshKeyRsa: addSshKey(
    input: {
      id: 4
      name: "ci-customer-sshkey-rsa"
      keyValue: "AAAAB3NzaC1yc2EAAAADAQABAAACAQDEZlms5XsiyWjmnnUyhpt93VgHypse9Bl8kNkmZJTiM3Ex/wZAfwogzqd2LrTEiIOWSH1HnQazR+Cc9oHCmMyNxRrLkS/MEl0yZ38Q+GDfn37h/llCIZNVoHlSgYkqD0MQrhfGL5AulDUKIle93dA6qdCUlnZZjDPiR0vEXR36xGuX7QYAhK30aD2SrrBruTtFGvj87IP/0OEOvUZe8dcU9G/pCoqrTzgKqJRpqs/s5xtkqLkTIyR/SzzplO21A+pCKNax6csDDq3snS8zfx6iM8MwVfh8nvBW9seax1zBvZjHAPSTsjzmZXm4z32/ujAn/RhIkZw3ZgRKrxzryttGnWJJ8OFyF31JTJgwWWuPdH53G15PC83ZbmEgSV3win51RZRVppN4uQUuaqZWG9wwk2a6P5aen1RLCSLpTkd2mAEk9PlgmJrf8vITkiU9pF9n68ENCoo556qSdxW2pxnjrzKVPSqmqO1Xg5K4LOX4/9N4n4qkLEOiqnzzJClhFif3O28RW86RPxERGdPT81UI0oDAcU5euQr8Emz+Hd+PY1115UIld3CIHib5PYL9Ee0bFUKiWpR/acSe1fHB64mCoHP7hjFepGsq7inkvg2651wUDKBshGltpNkMj6+aZedNc0/rKYyjl80nT8g8QECgOSRzpmYp0zli2HpFoLOiWw=="
      keyType: SSH_RSA
      user: {
        email: "ci-customer-user-rsa@example.com"
      }
    }
  ) {
    id
  }
  CiCustomerSshKeyEd25519: addSshKey(
    input: {
      id: 5
      name: "ci-customer-sshkey-ed25519"
      keyValue: "AAAAC3NzaC1lZDI1NTE5AAAAIMdEs1h19jv2UrbtKcqPDatUxT9lPYcbGlEAbInsY8Ka"
      keyType: SSH_ED25519
      user: {
        email: "ci-customer-user-ed25519@example.com"
      }
    }
  ) {
    id
  }

  ## credentialtestbothgroupaccess_user: Access to group1 and group2
  CredentialtestCustomerAccessUserAdd1: addUserToGroup(
    input: {
      user: {
        email:"credentialtestbothgroupaccess_user@example.com"
      }
      group: {
        name: "credentialtest-group1"
      }
      role: OWNER
    }
  ) {
    name
  }
  CredentialtestCustomerAccessUserAdd2: addUserToGroup(
    input: {
      user: {
        email:"credentialtestbothgroupaccess_user@example.com"
      }
      group: {
        name: "credentialtest-group2"
      }
      role: OWNER
    }
  ) {
    name
  }

  ## credentialtestsubgroupaccess_user: Access to group1 and group3
  CredentialtestSubgroupAccessUserAdd1: addUserToGroup(
    input: {
      user: {
        email:"credentialtestsubgroupaccess_user@example.com"
      }
      group: {
        name: "credentialtest-group3"
      }
      role: OWNER
    }
  ) {
    name
  }


  #### Filling API with needed Objects for CI
  # Customer with a private key that has access to the local-git server
  CiGroup: addGroup(
    input: {
      name: "ci-group"
    }
  ) {
    id
  }
  CiCustomerUserAddRsa: addUserToGroup(
    input: {
      user: {
        email:"ci-customer-user-rsa@example.com"
      }
      group: {
        name: "ci-group"
      }
      role: OWNER
    }
  ) {
    name
  }
  CiCustomerUserAddEd25519: addUserToGroup(
    input: {
      user: {
        email:"ci-customer-user-ed25519@example.com"
      }
      group: {
        name: "ci-group"
      }
      role: OWNER
    }
  ) {
    name
  }

  # Real RocketChat Hook on the amazeeio RocketChat for testing
  CiRocketChat: addNotificationRocketChat(
    input: {
      name: "amazeeio--lagoon-local-ci"
      webhook: "https://amazeeio.rocket.chat/hooks/ikF5XMohDZK7KpsZf/c9BFBt2ch8oMMuycoERJQMSLTPo8nmZhg2Hf2ny68ZpuD4Kn"
      channel: "lagoon-local-ci"
    }
  ) {
    id
  }

  # Fake email address for testing
  CiEmail: addNotificationEmail(
    input: {
      name: "local-email-testing",
      emailAddress: "mail@example.com"
    }
  ) {
    id
  }


  #### Lagoon Kickstart Objects
  # Customer with a private key that has access to the local-git server.
  KickstartGroup: addGroup(
    input: {
      name: "kickstart-group"
    }
  ) {
    id
  }
  KickstartRocketChat: addNotificationRocketChat(
    input: {
      name: "amazeeio--lagoon-kickstart"
      webhook: "https://amazeeio.rocket.chat/hooks/ikF5XMohDZK7KpsZf/c9BFBt2ch8oMMuycoERJQMSLTPo8nmZhg2Hf2ny68ZpuD4Kn"
      channel: "lagoon-kickstart"
    }
  ) {
    id
  }
  KickstartOpenshift: addOpenshift(
    input: {
      id: 3
      name: "kickstart-openshift"
      consoleUrl: "[REPLACE ME WITH OPENSHIFT URL]"
      token: "[REPLACE ME WITH OPENSHIFT LAGOON SERVICEACCOUTN TOKEN]"
    }
  ) {
    id
  }
  KickstartProject: addProject(
    input: {
      id: 13
      name: "lagoon"
      openshift: 3
      gitUrl: "git@github.com:amazeeio/lagoon.git"
      openshiftProjectPattern: "lagoon"
      productionEnvironment:"master"
    }
  ) {
    id
  }
  KickstartProjectGroup4: addGroupsToProject(
    input: {
      project: {
        name: "lagoon"
      }
      groups: [
        {
          name: "kickstart-group"
        }
      ]
    }
  ) {
    id
  }
  KickstartRocketChatNotification: addNotificationToProject(
    input: {
      project: "lagoon"
      notificationType: ROCKETCHAT
      notificationName: "amazeeio--lagoon-kickstart"
    }
  ) {
    id
  }

  #### Filling API with needed objects for UI
  UIOpenshift: addOpenshift(
    input: {
      id: 4
      name: "ui-openshift"
      consoleUrl: "https://localhost:8443/"
    }
  ) {
    id
  }
  UICustomer1: addGroup(
    input: { name: "ui-customer" }
  ) {
    id
  }
  UIProject1: addProject(
    input: {
      id: 18
      name: "high-cotton"
      availability: HIGH
      openshift: 4
      gitUrl: "ssh://git@172.17.0.1:2222/git/project18.git"
      productionEnvironment: "Master"
      problemsUi: 1
      factsUi: 1
    }
  ) {
    id
  }
  UIBillingGroup1: addBillingGroup(
    input: { name: "High Cotton Billing Group", currency: USD }
  ) {
    id
  }
  UIProject1BillingGroup1: addProjectToBillingGroup(
    input: {
      project: { name: "high-cotton" }
      group: { name: "High Cotton Billing Group" }
    }
  ) {
    id
  }
  UIProject1Group5: addGroupsToProject(
    input: {
      project: {
        name: "high-cotton"
      }
      groups: [
        {
          name: "ui-customer"
        }
      ]
    }
  ) {
    id
  }
  UIProject1Environment1: addOrUpdateEnvironment(
    input: {
      id: 3
      name: "Master"
      project: 18
      deployType: BRANCH
      deployBaseRef: "Master"
      environmentType: PRODUCTION
      openshiftProjectName: "high-cotton-master"
    }
  ) {
    id
  }
  UIProject1Environment1Update: updateEnvironment(
    input: {
      id: 3
      patch: {
        route: "http://highcotton.org"
        routes: "http://highcotton.org,https://varnish-highcotton-org-prod.us.amazee.io,https://nginx-highcotton-org-prod.us.amazee.io"
      }
    }
  ) {
    id
  }

  UIProject1Environment1Backup1: addBackup(
    input: {
      environment: 3
      source: "files"
      backupId: "e2e1d31b4a7dfc1687f469b6673f6bf2c0aabee0cc6b3f1bdbde710a9bc6280d"
      created: "2018-10-14 00:33:16"
    }
  ) {
    id
  }

  UIProject1Environment1Backup1Restore: addRestore(
    input: {
      backupId: "e2e1d31b4a7dfc1687f469b6673f6bf2c0aabee0cc6b3f1bdbde710a9bc6280d"
      execute: false
    }
  ) {
    id
  }

  UIProject1Environment1Backup2: addBackup(
    input: {
      environment: 3
      source: "mariadb"
      backupId: "e2e1d31b4a7dfc1687f469b6673f6bf2c0aabee0cc6b3f1bdbde710a9bc6280f"
      created: "2018-10-14 00:33:16"
    }
  ) {
    id
  }

  UIProject1Environment1Backup2Restore: addRestore(
    input: {
      backupId: "e2e1d31b4a7dfc1687f469b6673f6bf2c0aabee0cc6b3f1bdbde710a9bc6280f"
      status: SUCCESSFUL
      restoreLocation: "/restore/e2e1d31b4a7dfc1687f469b6673f6bf2c0aabee0cc6b3f1bdbde710a9bc6280f/files.gz"
      execute: false
    }
  ) {
    id
  }

  UIProject1Environment1Backup3: addBackup(
    input: {
      environment: 3
      source: "files"
      backupId: "e260f07c374e4a3319c5d46e688dab6f1eb23c3e61c166a37609d55762d2ee0b"
      created: "2018-10-13 00:33:16"
    }
  ) {
    id
  }

  UIProject1Environment1Backup3Restore: addRestore(
    input: {
      backupId: "e260f07c374e4a3319c5d46e688dab6f1eb23c3e61c166a37609d55762d2ee0b"
      status: FAILED
      execute: false
    }
  ) {
    id
  }

  UIProject1Environment1Backup4: addBackup(
    input: {
      environment: 3
      source: "mariadb"
      backupId: "bf072a09e17726da54adc79936ec8745521993599d41211dfc9466dfd5bc32a5"
      created: "2018-10-13 00:33:16"
    }
  ) {
    id
  }

  UIProject1Environment1addDeployment1: addDeployment(
    input: {
      name: "build-1"
      status: COMPLETE
      environment: 3
      created: "2018-10-07 23:02:41"
      started: "2018-10-07 23:03:41"
      completed: "2018-10-07 23:20:41"
    }
  ) {
    id
  }
  UIProject1Environment1addDeployment2: addDeployment(
    input: {
      name: "build-2"
      status: FAILED
      environment: 3
      created: "2018-10-07 23:02:41"
      started: "2018-10-07 23:03:41"
      completed: "2018-10-07 23:20:41"
    }
  ) {
    id
  }
  UIProject1Environment1addDeployment3: addDeployment(
    input: {
      name: "build-3"
      status: RUNNING
      environment: 3
      created: "2018-10-07 23:02:41"
      started: "2018-10-07 23:03:41"
    }
  ) {
    id
  }

  UIProject1Environment1addTask1: addTask(
    input: {
      name: "Site Status"
      status: ACTIVE
      environment: 3
      service: "cli"
      command: "drush status"
      created: "2018-10-07 23:02:41"
      started: "2018-10-07 23:03:41"
      execute: false
    }
  ) {
    id
  }

  UIProject1Environment1addTask2: addTask(
    input: {
      name: "Drupal Archive"
      status: SUCCEEDED
      environment: 3
      service: "cli"
      command: "drush archive-dump"
      created: "2018-10-07 23:02:41"
      started: "2018-10-07 23:03:41"
      completed: "2018-10-07 23:13:41"
      execute: false
    }
  ) {
    id
  }

  UIProject1Environment1addTask3: addTask(
    input: {
      name: "Drupal Archive"
      status: FAILED
      environment: 3
      service: "cli"
      command: "drush archive-dump"
      created: "2018-10-07 23:02:41"
      started: "2018-10-07 23:03:41"
      completed: "2018-10-07 23:05:41"
      execute: false
    }
  ) {
    id
  }

  UIProject1Environment1addServices: setEnvironmentServices(input:{environment:3, services:["cli", "nginx", "mariadb"]}) {
    id
  }

  UIProject1Environment1addFacts: addFacts(
    input: {
      facts: [
          {
            name: "lagoon-category"
            value: "saas"
            environment: 3
            source: ""
            description: "Category of the site"
            category: "Lagoon"
            keyFact: true
          },
          {
            name: "drupal-core"
            value: "9.0.1"
            environment: 3
            source: "drush-pml"
            description: "Drupal CMS version found on environment"
            category: "Framework"
            keyFact: true
          },
          {
            name: "php-version"
            value: "8.0.3"
            environment: 3
            source: "php-version"
            description: "PHP version found on environment"
            category: "Programming language"
            keyFact: true
          },
          {
            name: "Lagoon"
            value: "21.3.0"
            environment: 3
            source: "env"
            description: "Lagoon version"
            category: "Platform"
            keyFact: true
          },
          {
            name: "interesting-package"
            value: "1.0.0"
            environment: 3
            source: "local-dev"
            description: "Description of interesting php package"
            category: "Composer package"
          },
          {
            name: "npm-module"
            value: "2.0.0"
            environment: 3
            source: "local-dev"
            description: "Description of node module"
            category: "Node package"
          },
          {
            name: "site-code-status"
            value: "200"
            environment: 3
            source: "curl"
            description: "Health check of site"
            category: "Performance"
            keyFact: true
          }
      ]
    }
  ) {
    id
  }

  UIProject1Environment1addFactReference1: addFactReference(
    input: {
        fid: 2
        name: "nginx.high-cotton.org"
    }
  ) {
    id
  }

  UIProject1Environment1addFactReference2: addFactReference(
    input: {
        fid: 2
        name: "cli"
    }
  ) {
    id
  }

  UIProject1Environment2: addOrUpdateEnvironment(
    input: {
      id: 4
      name: "Staging"
      project: 18
      deployType: BRANCH
      deployBaseRef: "Staging"
      environmentType: DEVELOPMENT
      openshiftProjectName: "high-cotton-staging"
    }
  ) {
    id
  }
  UIProject1Environment2Update: updateEnvironment(
    input: {
      id: 4
      patch: {
        route: "https://varnish-highcotton-org-staging.us.amazee.io"
        routes: "https://varnish-highcotton-org-staging.us.amazee.io,https://nginx-highcotton-org-staging.us.amazee.io"
      }
    }
  ) {
    id
  }
  UIProject1Environment3: addOrUpdateEnvironment(
    input: {
      id: 5
      name: "Development"
      project: 18
      deployType: BRANCH
      deployBaseRef: "Development"
      environmentType: DEVELOPMENT
      openshiftProjectName: "high-cotton-development"
    }
  ) {
    id
  }
  UIProject1Environment3Update: updateEnvironment(
    input: {
      id: 5
      patch: {
        route: "https://varnish-highcotton-org-development.us.amazee.io"
        routes: "https://varnish-highcotton-org-development.us.amazee.io,https://nginx-highcotton-org-development.us.amazee.io"
      }
    }
  ) {
    id
  }

  UIProject1Environment3addFacts: addFacts(
    input: {
       facts: [
          {
            name: "lagoon-category"
            value: "saas"
            environment: 5
            source: ""
            description: "Category of the site"
            category: "Lagoon"
            keyFact: true
          },
          {
            name: "drupal-core"
            value: "9.0.1"
            environment: 5
            source: "drush-pml"
            description: "Drupal CMS version found on environment"
            category: "Framework"
            keyFact: true
          },
          {
            name: "php-version"
            value: "8.0.3"
            environment: 5
            source: "php-version"
            description: "PHP version found on environment"
            category: "Programming language"
            keyFact: true
          },
          {
            name: "Lagoon"
            value: "21.3.0"
            environment: 5
            source: "env"
            description: "Lagoon version"
            category: "Platform"
            keyFact: true
          },
          {
            name: "interesting-package"
            value: "1.0.0"
            environment: 5
            source: "local-dev"
            description: "Description of interesting php package"
            category: "Composer package"
          },
          {
            name: "npm-module"
            value: "2.0.0"
            environment: 5
            source: "local-dev"
            description: "Description of node module"
            category: "Node package"
          },
          {
            name: "site-code-status"
            value: "403"
            environment: 5
            source: "curl"
            description: "Health check of site"
            category: "Performance"
            keyFact: true
          }
      ]
    }
  ) {
    id
  }

  UIProject1Environment4: addOrUpdateEnvironment(
    input: {
      id: 6
      name: "PR-175"
      project: 18
      deployType: PULLREQUEST
      deployBaseRef: "target"
      deployHeadRef: "source"
      deployTitle: "PR-175"
      environmentType: DEVELOPMENT
      openshiftProjectName: "high-cotton-pr-175"
    }
  ) {
    id
  }
  UIProject1Environment4Update: updateEnvironment(
    input: {
      id: 6
      patch: {
        route: "" # intentionally empty, for testing
        routes: "" # intentionally empty, for testing
      }
    }
  ) {
    id
  }

}
