
- name: "{{ testname }} - init git, add files, commit, git push"
  hosts: localhost
  serial: 1
  vars:
    git_files: "node{{ node_version }}/"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/git-init.yaml
  - ansible.builtin.include_tasks: ../../tasks/git-add-commit-push.yaml
  - set_fact:
      first_commit_hash: "{{ current_head }}"

- name: "{{ testname }} - webhook bitbucket push first commit hash to repo"
  hosts: localhost
  serial: 1
  vars:
    git_hash_push: "{{ first_commit_hash }}"
    git_repo_ssh_url: "{{ localgit_url }}/{{ git_repo_name }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/webhook-bitbucket/push.yaml

- ansible.builtin.import_playbook: ../../checks/check-branch-sha.yaml
  vars:
    expected_head: "{{ first_commit_hash }}"
    expected_branch: "{{ branch }}"
    project: "{{ project }}"
    url: "{{ check_url }}"


- name: "{{ testname }} - second commit (empty) and git push into same git repo"
  hosts: localhost
  serial: 1
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/git-empty-commit-push.yaml
  - set_fact:
      second_commit_hash: "{{ current_head }}"

- name: "{{ testname }} - [skip deployment] commit and git push into same git repo - this should not trigger a deployment"
  hosts: localhost
  serial: 1
  vars:
    git_hash_push: "{{ second_commit_hash }}"
    git_repo_ssh_url: "{{ localgit_url }}/{{ git_repo_name }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/webhook-bitbucket/push-skipdeploy.yaml

- name: "{{ testname }} - wait for 60 seconds to give an eventual running deployment time to run, after that check again if the first commit is still there"
  hosts: localhost
  serial: 1
  vars:
    seconds: "60"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/pause.yaml

- ansible.builtin.import_playbook: ../../checks/check-branch-sha.yaml
  vars:
    expected_head: "{{ first_commit_hash }}"
    expected_branch: "{{ branch }}"
    project: "{{ project }}"
    url: "{{ check_url }}"

- name: "{{ testname }} - webhook bitbucket delete push"
  hosts: localhost
  serial: 1
  vars:
    git_repo_ssh_url: "{{ localgit_url }}/{{ git_repo_name }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/webhook-bitbucket/push-delete.yaml

- name: "{{ testname }} - check if site for project does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "{{ check_url }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml
