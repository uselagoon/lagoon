
- name: "{{ testname }} - init git, add files, commit, git push"
  hosts: localhost
  serial: 1
  vars:
    git_files: "nginx/first/"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/git-init.yaml
  - ansible.builtin.include_tasks: ../../tasks/git-add-commit-push.yaml

- name: "{{ testname }} - api deployEnvironmentBranch on {{ project }}, which should deploy the first commit"
  hosts: localhost
  serial: 1
  vars:
    branch: "{{ branch }}"
    project: "{{ project }}"
    namespace: "{{ project | regex_replace('_', '-') }}-{{ branch | regex_replace('/', '-') }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- name: "{{ testname }} - check if {{ project }} is deployed with searching for 'Hello World!' on autogenerated route"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content.yaml

- name: "{{ testname }} - api add route on {{ project }} environment {{ branch }}"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    branch: "{{ branch }}"
    domain: "api-route.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix | regex_replace(':80', '') }}"
    service: "nginx"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/add-api-route.yaml

- name: "{{ testname }} - api update {{ project }} autogeneratedroutes to disabled"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    autogenerated_routes: "false"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/update-project-autogeneratedroutes.yaml

- name: "{{ testname }} - api deployEnvironmentBranch on {{ project }}, which should deploy the first commit"
  hosts: localhost
  serial: 1
  vars:
    branch: "{{ branch }}"
    project: "{{ project }}"
    namespace: "{{ project | regex_replace('_', '-') }}-{{ branch | regex_replace('/', '-') }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- name: "{{ testname }} - api check deployment source user and type for deploy environment"
  hosts: localhost
  serial: 1
  vars:
    namespace: "{{ project | regex_replace('_', '-') }}-{{ branch | regex_replace('/', '-') }}"
    sourceUser: "ci-customer-user-rsa@example.com"
    sourceType: "API"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/get-latest-deployment-source.yaml

- name: "{{ testname }} - check if autogenerated route {{ project }} does not exist anymore after disabling"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml

- name: "{{ testname }} - check if {{ project }} is deployed with searching for 'Hello World!'"
  hosts: localhost
  serial: 1
  vars:
    url: "http://api-route.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content.yaml

- name: "{{ testname }} - api deleteEnvironment on {{ project }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    branch: "{{ branch }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-environment.yaml

- name: "{{ testname }} - api update {{ project }} router pattern to empty"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    routerpattern: ""
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/update-project-routerpattern.yaml

- name: "{{ testname }} - check if site for {{ project }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "http://api-route.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml