- name: "{{ testname }} FIRST - init git, add files, commit, git push"
  hosts: localhost
  serial: 1
  vars:
    git_files: "drupal{{ drupal_version }}-{{ db }}/"
    branch: "drush-first"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/git-init.yaml
  - ansible.builtin.include_tasks: ../../tasks/git-add-commit-push.yaml
  - set_fact:
      current_head_first: "{{ current_head }}"

- name: "{{ testname }} FIRST - api deployEnvironmentBranch on {{ project }}, which should deploy the first commit"
  hosts: localhost
  serial: 1
  vars:
    branch: "drush-first"
    project: "{{ project }}"
    namespace: "{{ project | regex_replace('_', '-') }}-drush-first"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- name: "{{ testname }} SECOND - init git, add files, commit, git push"
  hosts: localhost
  serial: 1
  vars:
    git_files: "drupal{{ drupal_version }}-{{ db }}/"
    branch: "drush-second"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/git-init.yaml
  - ansible.builtin.include_tasks: ../../tasks/git-add-commit-push.yaml
  - set_fact:
      current_head_second: "{{ current_head }}"

- name: "{{ testname }} SECOND - api deployEnvironmentBranch on {{ project }}, which should deploy the first commit"
  hosts: localhost
  serial: 1
  vars:
    branch: "drush-second"
    project: "{{ project }}"
    namespace: "{{ project | regex_replace('_', '-') }}-drush-second"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- ansible.builtin.import_playbook: check-deployed.yaml
  vars:
    expected_head: "{{ current_head_first }}"
    expected_branch: "drush-first"
    branch: "drush-first"
    project: "{{ project }}"

- ansible.builtin.import_playbook: check-deployed.yaml
  vars:
    expected_head: "{{ current_head_second }}"
    expected_branch: "drush-second"
    branch: "drush-second"
    project: "{{ project }}"

# - name: "{{ testname }} - wait for 60 seconds to give an eventual running deployment time to run, after that check again if the first commit is still there"
#   hosts: localhost
#   serial: 1
#   vars:
#     seconds: "900"
#   tasks:
#   - ansible.builtin.include_tasks: ../../tasks/pause.yaml

- name: "{{ testname }} - check if we can connect via oc project user and no service"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-drush-first"
    command: env
    expected_content: LAGOON=cli-drupal
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if we can connect via oc project user defining service and container"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-drush-first"
    command: service=nginx container=php env
    expected_content: LAGOON=php
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if drush site alias shows up @drush-second"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-drush-first"
    command: drush la
    expected_content: "@lagoon.{{ project }}-drush-second"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - set remote drupal site 'drush-second' name with random number"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-drush-first"
    command: drush @lagoon.{{ project }}-drush-second -y cset system.site name "CHANGED-{{ random_number }}"
    expected_content: ""
  tasks:
  - set_fact:
      random_number: "{{ 99999999 | random }}"
  - ansible.builtin.include_tasks: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if site name set on remote drupal 'drush-second' has worked"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-drush-first"
    command: drush @lagoon.{{ project }}-drush-second -y cget system.site name
    expected_content: "CHANGED-{{ random_number }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if {{ project }} is deployed with searching for the hash, nginx route"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.drush-second.{{ route_suffix }}"
    expected_content: "CHANGED-{{ random_number }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content.yaml

- name: "{{ testname }} - drush sql-sync from remote drupal site 'drush-second' to local"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-drush-first"
    command: drush -y sql-sync @lagoon.{{ project }}-drush-second @self
    expected_content: ""
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if random number now appears on own drupal"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-drush-first"
    command: drush -y cget system.site name
    expected_content: "CHANGED-{{ random_number }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - check if {{ project }} is deployed with searching for the hash, nginx route"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.drush-first.{{ route_suffix }}"
    expected_content: "CHANGED-{{ random_number }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content.yaml

- name: "{{ testname }} - api deleteEnvironment on {{ project }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    branch: "drush-first"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-environment.yaml

- name: "{{ testname }} - api deleteEnvironment on {{ project }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    branch: "drush-second"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-environment.yaml

- name: "{{ testname }} - check if site for {{ project }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.drush-first.{{ route_suffix }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml

- name: "{{ testname }} - check if site for {{ project }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.drush-second.{{ route_suffix }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml

- name: "{{ testname }} third - init git, add files, commit, git push"
  hosts: localhost
  serial: 1
  vars:
    git_files: "drupal{{ drupal_version }}-{{ db }}/"
    branch: "foo/bar"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/git-init.yaml
  - ansible.builtin.include_tasks: ../../tasks/git-add-commit-push.yaml
  - set_fact:
      current_head_third: "{{ current_head }}"

- name: "{{ testname }} third - api deployEnvironmentBranch on {{ project }}, which should deploy the first commit"
  hosts: localhost
  serial: 1
  vars:
    branch: "foo/bar"
    project: "{{ project }}"
    namespace: "{{ project | regex_replace('_', '-') }}-foo-bar"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- ansible.builtin.import_playbook: check-deployed.yaml
  vars:
    expected_head: "{{ current_head_third }}"
    expected_branch: "foo/bar"
    branch: "foo/bar"
    project: "{{ project }}"

- name: "{{ testname }} - does ssh work"
  hosts: localhost
  serial: 1
  vars:
    username: "{{ project }}-foo-bar"
    command: drush @lagoon.{{ project }}-foo-bar ssh echo zzyzx
    expected_content: "zzyzx"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/ssh/ssh-command.yaml

- name: "{{ testname }} - api deleteEnvironment on {{ project }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    branch: "foo/bar"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-environment.yaml

- name: "{{ testname }} - check if site for {{ project }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.foo-bar.{{ route_suffix }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml
