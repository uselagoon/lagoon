
- name: "{{ testname }} - init git, add files, commit, git push"
  hosts: localhost
  serial: 1
  vars:
    git_files: "features/"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/git-init.yaml
  - ansible.builtin.include_tasks: ../../tasks/git-add-commit-push.yaml

# delete the envvar if it exists already
- name: "{{ testname }} - api delete LAGOON_FASTLY_SERVICE_ID envVariable on {{ project }}"
  hosts: localhost
  serial: 1
  vars:
    envName: "LAGOON_FASTLY_SERVICE_ID"
    project: "{{ project }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-project-variable.yaml

# delete the envvar if it exists already
- name: "{{ testname }} - api delete LAGOON_FASTLY_SERVICE_IDS envVariable on {{ project }}"
  hosts: localhost
  serial: 1
  vars:
    envName: "LAGOON_FASTLY_SERVICE_IDS"
    project: "{{ project }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-project-variable.yaml

# delete the envvar if it exists already
- name: "{{ testname }} - api delete LAGOON_FASTLY_API_SECRETS envVariable on {{ project }}"
  hosts: localhost
  serial: 1
  vars:
    envName: "LAGOON_FASTLY_API_SECRETS"
    project: "{{ project }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-project-variable.yaml

# # add the `LAGOON_FASTLY_NOCACHE_SERVICE_ID` environment variable
# - name: "{{ testname }} - api add envVariable on {{ project }}"
#   hosts: localhost
#   serial: 1
#   vars:
#     envName: "LAGOON_FASTLY_NOCACHE_SERVICE_ID"
#     envValue: "lagoon"
#     envScope: "BUILD"
#     project: "{{ project }}"
#   tasks:
#   - ansible.builtin.include_tasks: ../../tasks/api/add-project-variable.yaml

# - name: "{{ testname }} - api deployEnvironmentBranch on {{ project }}"
#   hosts: localhost
#   serial: 1
#   vars:
#     branch: "{{ branch }}"
#     project: "{{ project }}"
#     namespace: "{{ project | regex_replace('_', '-') }}-{{ branch | regex_replace('/', '-') }}"
#   tasks:
#   - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

# - name: >
#     {{ testname }} - check that the ingress has the correct fastly annotations
#   hosts: localhost
#   serial: 1
#   vars:
#     url: "{{ check_url }}"
#     expected_annotations:
#     - "fastly.amazee.io/watch=true"
#     - "fastly.amazee.io/service-id=lagoon"
#     ingress: annotations.com
#   tasks:
#   - ansible.builtin.include_tasks: ../../checks/check-ingress-annotations.yaml

# add the `LAGOON_FASTLY_SERVICE_ID` environment variable
- name: "{{ testname }} - api add LAGOON_FASTLY_SERVICE_ID envVariable on {{ project }}"
  hosts: localhost
  serial: 1
  vars:
    envName: "LAGOON_FASTLY_SERVICE_ID"
    envValue: "newlagoon:true"
    envScope: "BUILD"
    project: "{{ project }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/add-project-variable.yaml

- name: "{{ testname }} - api deployEnvironmentBranch {{ branch }} on {{ project }}"
  hosts: localhost
  serial: 1
  vars:
    branch: "{{ branch }}"
    project: "{{ project }}"
    namespace: "{{ project | regex_replace('_', '-') }}-{{ branch | regex_replace('/', '-') }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- name: >
    {{ testname }} - check that the ingress has the correct fastly annotations
  hosts: localhost
  serial: 1
  vars:
    url: "{{ check_url }}"
    expected_annotations:
    - "fastly.amazee.io/watch=true"
    - "fastly.amazee.io/service-id=newlagoon"
    ingress: annotations.com
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-ingress-annotations.yaml

# add the `LAGOON_FASTLY_API_SECRETS` environment variable
- name: "{{ testname }} - api add LAGOON_FASTLY_API_SECRETS envVariable on {{ project }}"
  hosts: localhost
  serial: 1
  vars:
    envName: "LAGOON_FASTLY_API_SECRETS"
    envValue: "annotationscom:apitoken:platformtlsid"
    envScope: "BUILD"
    project: "{{ project }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/add-project-variable.yaml

# add the `LAGOON_FASTLY_API_SECRETS` environment variable
- name: "{{ testname }} - api add LAGOON_FASTLY_SERVICE_IDS envVariable on {{ project }}"
  hosts: localhost
  serial: 1
  vars:
    envName: "LAGOON_FASTLY_SERVICE_IDS"
    envValue: "annotations.com:newlagoon2:true:annotationscom"
    envScope: "BUILD"
    project: "{{ project }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/add-project-variable.yaml

- name: "{{ testname }} - api deployEnvironmentBranch on {{ project }}"
  hosts: localhost
  serial: 1
  vars:
    branch: "{{ branch }}"
    project: "{{ project }}"
    namespace: "{{ project | regex_replace('_', '-') }}-{{ branch | regex_replace('/', '-') }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- name: >
    {{ testname }} - check that the ingress has the correct fastly annotations for a service override with custom secret
  hosts: localhost
  serial: 1
  vars:
    url: "{{ check_url }}"
    expected_annotations:
    - "fastly.amazee.io/watch=true"
    - "fastly.amazee.io/service-id=newlagoon2"
    - "fastly.amazee.io/api-secret-name=fastly-api-annotationscom"
    ingress: annotations.com
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-ingress-annotations.yaml

- name: "{{ testname }} - api deleteEnvironment on {{ project }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    branch: "{{ branch }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-environment.yaml

- name: "{{ testname }} - check if site for {{ project }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "{{ check_url }}"
    expected_returncode: "{{ lookup('env','DELETED_STATUS_CODE') }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml
