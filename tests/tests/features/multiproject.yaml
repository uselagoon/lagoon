
- name: "{{ testname }} - init git, add files, commit, git push"
  hosts: localhost
  serial: 1
  vars:
    git_files: "features/"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/git-init.yaml
  - ansible.builtin.include_tasks: ../../tasks/git-add-commit-push.yaml

- name: "{{ testname }} - api deployEnvironmentBranch on first project {{ project1 }}"
  hosts: localhost
  serial: 1
  vars:
    branch: "{{ branch }}"
    project: "{{ project1 }}"
    namespace: "{{ project1 }}-{{ branch }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- name: "{{ testname }} - api deployEnvironmentBranch on second project {{ project2 }}"
  hosts: localhost
  serial: 1
  vars:
    branch: "{{ branch }}"
    project: "{{ project2 }}"
    namespace: "{{ project2 }}-{{ branch }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- ansible.builtin.import_playbook: ../../checks/check-branch-sha.yaml
  vars:
    expected_head: "{{ current_head }}"
    expected_branch: "{{ branch }}"
    project: "{{ project1 }}"
    url: "{{ check_url1 }}"

- ansible.builtin.import_playbook: ../../checks/check-branch-sha.yaml
  vars:
    expected_head: "{{ current_head }}"
    expected_branch: "{{ branch }}"
    project: "{{ project2 }}"
    url: "{{ check_url2 }}"

- name: "{{ testname }} - check if {{ project1 }} is deployed with accessing the custom domain and searching for the environment variable LAGOON_ROUTE"
  hosts: localhost
  serial: 1
  vars:
    url: "{{ check_url1 }}"
    host: "{{ custom_domain1 }}"
    expected_content: "LAGOON_ROUTE=https://{{ custom_domain1 }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-host.yaml

- name: "{{ testname }} - check if {{ project2 }} is deployed with accessing the custom domain and searching for the environment variable LAGOON_ROUTE"
  hosts: localhost
  serial: 1
  vars:
    url: "{{ check_url2 }}"
    host: "{{ custom_domain2 }}"
    expected_content: "LAGOON_ROUTE=https://{{ custom_domain2 }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-host.yaml

- name: "{{ testname }} - api deleteEnvironment on {{ project1 }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project1 }}"
    branch: "{{ branch }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-environment.yaml

- name: "{{ testname }} - api deleteEnvironment on {{ project2 }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project2 }}"
    branch: "{{ branch }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-environment.yaml

- name: "{{ testname }} - check if site for {{ project1 }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "http://{{ project1 | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml

- name: "{{ testname }} - check if site for {{ project2 }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "http://{{ project2 | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml
