- name: "{{ testname }} - check if {{ project }} is deployed with searching for 'Hello World!'"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content.yaml

- name: "{{ testname }} - check if auto generated domain allows secure traffic"
  hosts: localhost
  serial: 1
  vars:
    url: "https://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix_https }}"
    host: "nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix_https }}"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-host.yaml

- name: "{{ testname }} - check if custom domain 'insecure-allow.com' is created and allows insecure traffic"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    host: "insecure-allow.com"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-host.yaml

- name: "{{ testname }} - check if custom domain 'insecure-allow.com' is created and allows secure traffic"
  hosts: localhost
  serial: 1
  vars:
    url: "https://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix_https }}"
    host: "insecure-allow.com"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-host.yaml

- name: "{{ testname }} - check if custom domain 'insecure-redirect.com' is created and redirects to https"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    host: "insecure-redirect.com"
    expected_redirect_location: "https://insecure-redirect.com/?$"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-redirect-host.yaml

- name: "{{ testname }} - check if custom domain 'insecure-redirect.com' is created and allows secure traffic"
  hosts: localhost
  serial: 1
  vars:
    url: "https://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix_https }}"
    host: "insecure-redirect.com"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-host.yaml

- name: "{{ testname }} - check if custom domain 'insecure-none.com' does not allow http"
  hosts: localhost
  serial: 1
  tags: skip-on-kubernetes
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    host: "insecure-none.com"
    expected_returncode: 503
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode-host.yaml

- name: "{{ testname }} - check if custom domain 'insecure-none.com' is created and allows secure traffic"
  hosts: localhost
  serial: 1
  vars:
    url: "https://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix_https }}"
    host: "insecure-none.com"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-host.yaml

- name: "{{ testname }} - check if custom domain 'moving-route.com' is created and does not ask for basic auth"
  hosts: localhost
  serial: 1
  vars:
    url: "https://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix_https }}"
    host: "moving-route.com"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-host.yaml

- name: "{{ testname }} - check if custom domain 'hsts-header.com' is created and has HSTS header set"
  hosts: localhost
  serial: 1
  vars:
    url: "https://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix_https }}"
    host: "hsts-header.com"
    expected_returncode: 200
    expected_header: "strict_transport_security"
    expected_header_value: "max-age=15768000"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-header.yaml

- name: "{{ testname }} - check if custom domain 'hsts-header-null.com' is created and does not have HSTS header set"
  hosts: localhost
  serial: 1
  vars:
    url: "https://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix_https }}"
    host: "hsts-header-null.com"
    expected_returncode: 200
    expected_header: "strict_transport_security"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-header-absent.yaml

- name: "{{ testname }} - check if {{ project }} is redirecting correctly with no preserve'"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}/redirect-no-preserve/should/be/missing?arg1"
    expected_redirect_location: "foo.com$"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-redirect.yaml

- name: "{{ testname }} - check if {{ project }} is redirecting correctly with preserving'"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}/redirect-preserve/should/be/existing?arg1"
    expected_redirect_location: "foo.com/redirect-preserve/should/be/existing\\?arg1$"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-redirect.yaml

- name: "{{ testname }} - check if {{ project }} is redirecting correctly with preserving only URI'"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}/redirect-preserve-uri-only/should/be/existing?should-be-gone"
    expected_redirect_location: "foo.com/redirect-preserve-uri-only/should/be/existing$"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-redirect.yaml

- name: "{{ testname }} - check if {{ project }} is redirecting correctly with stripping of url'"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}/redirect-strip-args-handling/should/be/existing?arg1"
    expected_redirect_location: "foo.com/should/be/existing\\?arg1$"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-redirect.yaml

- name: "{{ testname }} - check if {{ project }} is requesting a basic auth"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx-basic-auth.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_returncode: 401
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml

- name: "{{ testname }} - check if {{ project }} is deployed and basic auth works"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx-basic-auth.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_content: "Hello World!"
    user: "username"
    password: "password"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-basic-auth.yaml

- name: "{{ testname }} - check if {{ project }} is deployed and basic auth disable via .env variable works"
  hosts: localhost
  serial: 1
  vars:
    url: "http://nginx-basic-auth-disable.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix }}"
    expected_content: "Hello World!"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content.yaml

- name: "{{ testname }} - check if custom domain nginx-basic-auth.com is working and does basic auth"
  hosts: localhost
  serial: 1
  vars:
    url: "https://nginx-basic-auth.{{ project | regex_replace('_', '-') }}.{{ branch | regex_replace('/', '-') }}.{{ route_suffix_https }}"
    expected_content: "Hello World!"
    user: "username"
    password: "password"
    host: "nginx-basic-auth.com"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-content-basic-auth-host.yaml
